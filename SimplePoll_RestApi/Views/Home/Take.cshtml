@using SimplePoll_DataLayer
@model Poll
@{
    int a = 0;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Poll</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PollId)

    <div class="form-group">
        @Html.LabelFor(model => model.PollName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.PollName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PollName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PollDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.PollDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PollDescription, "", new { @class = "text-danger" })
        </div>
    </div>


        
        @Html.HiddenFor(model => model.Question.QuestionId)
        @Html.HiddenFor(model => model.Question.PollId)
        <div class="form-group">
            @Html.LabelFor(model => model.Question.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Question.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question.QuestionText, "", new { @class = "text-danger" })
            </div>

        </div>

        <div>
            @foreach (Question_Answer answer in Model.Question.Answers)
            {
                <span>@(Model.Question.Answers[a].AnswerText)</span>
                @Html.RadioButtonFor(model => Model.Question.SelectedAnswer, Model.Question.Answers[a].AnswerId,  new { name = Model.Question.QuestionId }  )
                @Html.HiddenFor(model => model.Question.Answers[a].AnswerId)
                @Html.HiddenFor(model => model.Question.Answers[a].QuestionId)
                a++;
            }
        </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
